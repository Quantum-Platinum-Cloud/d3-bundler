#!/usr/bin/env node

var fs = require("fs"),
    path = require("path"),
    minimist = require("minimist"),
    rollup = require("rollup");

var argv = minimist(process.argv.slice(2)),
    entry = argv._[0],
    name = argv.name || "d3",
    format = argv.format || "umd";

rollup.rollup({
  entry: entry,
  resolvePath: function(importee, importer, options) {
    if (/^\./.test(importee)) return path.resolve(path.dirname(importer), importee).replace(/\.js$/, "") + ".js";
    var d = path.join("node_modules", importee);
    if (!fs.existsSync(d)) throw new Error("Missing module '" + importee + "'; required by '" + packageName(importer) + "'.");
    return path.join(d, "index.js");
  }
}).then(function(bundle) {
  process.stdout.write(bundle.generate({format: format, moduleName: name}).code);
}).catch(function(error) {
  console.error(error);
});

function packageName(importer) {
  var i = importer.indexOf("/node_modules/");
  if (i < 0) return path.basename(process.cwd());
  var j = importer.indexOf("/", i += 14);
  return importer.slice(i, j);
}
